digraph "rescue_else_block.rb" {
subgraph "cluster_::Object#foo" {
    label = "::Object#foo";
    color = blue;
    "bb::Object#foo_0" [shape = invhouse];
    "bb::Object#foo_1" [shape = parallelogram];

    "bb::Object#foo_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: Object = cast(<self>: NilClass, Object);\l<rescueStartTemp>$3: T.untyped = <unanalyzable>\l<rescueStartTemp>$3: T.untyped\l"
    ];

    "bb::Object#foo_0" -> "bb::Object#foo_3" [style="bold"];
    "bb::Object#foo_0" -> "bb::Object#foo_4" [style="tapered"];

    "bb::Object#foo_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::Object#foo_1" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_3" [
        label = "block[id=3, rubyBlockId=0](<returnMethodTemp>$2: T.nilable(Integer))\l<rescueTemp>$2: T.untyped = <unanalyzable>\l<exceptionClassTemp>$6: T.class_of(StandardError) = alias <C StandardError>\l<isaCheckTemp>$7: T.untyped = <rescueTemp>$2: T.untyped.is_a?(<exceptionClassTemp>$6: T.class_of(StandardError))\l<isaCheckTemp>$7: T.untyped\l"
    ];

    "bb::Object#foo_3" -> "bb::Object#foo_9" [style="bold"];
    "bb::Object#foo_3" -> "bb::Object#foo_12" [style="tapered"];

    "bb::Object#foo_4" [
        label = "block[id=4, rubyBlockId=0]()\l<returnMethodTemp>$2: Integer(1) = 1\l<ifTemp>$4: Integer(2) = 2\l<ifTemp>$4: Integer(2)\l"
    ];

    "bb::Object#foo_4" -> "bb::Object#foo_6" [style="bold"];
    "bb::Object#foo_4" -> "bb::Object#foo_10" [style="tapered"];

    "bb::Object#foo_6" [
        label = "block[id=6, rubyBlockId=0]()\l<returnMethodTemp>$2: Integer(3) = 3\l<unconditional>\l"
    ];

    "bb::Object#foo_6" -> "bb::Object#foo_10" [style="bold"];
    "bb::Object#foo_9" [
        label = "block[id=9, rubyBlockId=0](<returnMethodTemp>$2: T.nilable(Integer), <gotoDeadTemp>$8: NilClass)\l<gotoDeadTemp>$8: NilClass\l"
    ];

    "bb::Object#foo_9" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_9" -> "bb::Object#foo_13" [style="tapered"];

    "bb::Object#foo_10" [
        label = "block[id=10, rubyBlockId=0](<returnMethodTemp>$2: Integer(3))\l<rescueEndTemp>$5: T.untyped = <unanalyzable>\l<rescueEndTemp>$5: T.untyped\l"
    ];

    "bb::Object#foo_10" -> "bb::Object#foo_3" [style="bold"];
    "bb::Object#foo_10" -> "bb::Object#foo_9" [style="tapered"];

    "bb::Object#foo_12" [
        label = "block[id=12, rubyBlockId=0](<returnMethodTemp>$2: T.nilable(Integer))\l<gotoDeadTemp>$8: TrueClass(true) = true\l<gotoDeadTemp>$8: TrueClass(true)\l"
    ];

    "bb::Object#foo_12" -> "bb::Object#foo_1" [style="bold"];
    "bb::Object#foo_12" -> "bb::Object#foo_13" [style="tapered"];

    "bb::Object#foo_13" [
        label = "block[id=13, rubyBlockId=0](<returnMethodTemp>$2: T.nilable(Integer))\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: T.nilable(Integer)\l<unconditional>\l"
    ];

    "bb::Object#foo_13" -> "bb::Object#foo_1" [style="bold"];
}

subgraph "cluster_::<Class:<root>>#<static-init>" {
    label = "::<Class:<root>>#<static-init>";
    color = blue;
    "bb::<Class:<root>>#<static-init>_0" [shape = invhouse];
    "bb::<Class:<root>>#<static-init>_1" [shape = parallelogram];

    "bb::<Class:<root>>#<static-init>_0" [
        label = "block[id=0, rubyBlockId=0]()\l<self>: T.class_of(<root>) = cast(<self>: NilClass, AppliedType {\l  klass = <S <C <U <root>>> $1>\l  targs = [\l    <C <U <AttachedClass>>> = SelfTypeParam(<S <C <U <root>>> $1><C <U <AttachedClass>>>)\l  ]\l});\l<returnMethodTemp>$2: Symbol(:\"foo\") = :\"foo\"\l<finalReturn>: T.noreturn = return <returnMethodTemp>$2: Symbol(:\"foo\")\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_0" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
    "bb::<Class:<root>>#<static-init>_1" [
        label = "block[id=1, rubyBlockId=0]()\l<unconditional>\l"
    ];

    "bb::<Class:<root>>#<static-init>_1" -> "bb::<Class:<root>>#<static-init>_1" [style="bold"];
}

}

